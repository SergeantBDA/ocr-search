Metadata-Version: 2.4
Name: ocr-search
Version: 0.1.0
Summary: OCR-powered document search service (FastAPI + PostgreSQL)
Author-email: Your Name <you@example.com>
License: MIT
Keywords: ocr,fastapi,postgresql,search,pdf,image,text
Classifier: Programming Language :: Python :: 3.12
Classifier: Framework :: FastAPI
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: fastapi<0.101,>=0.95
Requires-Dist: uvicorn<1.0,>=0.22
Requires-Dist: SQLAlchemy<3.0,>=2.0
Requires-Dist: alembic<2.0,>=1.11
Requires-Dist: psycopg[binary]<4.0,>=3.2
Requires-Dist: pydantic<3.0,>=2.0
Requires-Dist: python-dotenv>=1.0
Requires-Dist: pytesseract>=0.3
Requires-Dist: Pillow>=10.0
Requires-Dist: pdfplumber>=0.8
Requires-Dist: pdf2image>=1.16
Requires-Dist: python-docx>=0.8
Requires-Dist: openpyxl>=3.1
Requires-Dist: orjson>=3.9
Requires-Dist: python-multipart>=0.0.9
Provides-Extra: dev
Requires-Dist: pytest<8.0,>=7.3; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21; extra == "dev"
Requires-Dist: pytest-cov>=4.0; extra == "dev"
Requires-Dist: black>=24.0; extra == "dev"
Requires-Dist: ruff>=0.12; extra == "dev"

# OCR Search — Быстрый старт (Windows)

Короткое руководство по установке и запуску проекта на Windows.

## Требования
- Python 3.9+
- PostgreSQL (локально или удалённо)
- Tesseract OCR (Windows)
- Poppler (для рендеринга PDF в изображения)

## Установка зависимостей (виртуальное окружение)
1. Создайте и активируйте виртуальное окружение:
   - PowerShell:
     python -m venv .venv
     .\.venv\Scripts\Activate.ps1
   - cmd:
     python -m venv .venv
     .\.venv\Scripts\activate.bat

2. Установите зависимости проекта (в режиме разработки):
   pip install -e .

3. Установите дополнительные пакеты, если требуется:
   pip install psycopg pillow pytesseract pdf2image pdfplumber python-docx openpyxl sqlalchemy alembic psycopg2-binary

## Установка Tesseract и Poppler (Windows)
- Tesseract:
  - Скачайте установщик Tesseract для Windows: https://github.com/tesseract-ocr/tesseract/releases
  - Установите и добавьте путь к `tesseract.exe` в PATH (пример: `C:\Program Files\Tesseract-OCR`)
  - Либо через Chocolatey:
    choco install tesseract -y

- Poppler (для pdf2image):
  - Скачайте сборку Poppler для Windows, например: https://github.com/oschwartz10612/poppler-windows/releases
  - Распакуйте и добавьте папку `bin` в PATH (например `C:\poppler-xx\Library\bin`)

Проверьте установки:
- tesseract --version
- где poppler: команды `pdftoppm` должны быть в PATH

## Настройка .env
Создайте файл `.env` в корне проекта с переменными окружения. Пример:

DATABASE_URL=postgresql+psycopg2://dbuser:dbpass@localhost:5432/ocr_db
ENV=development
APP_HOST=0.0.0.0
APP_PORT=8000

Перед запуском создайте саму базу данных в PostgreSQL:
- psql -U postgres -c "CREATE DATABASE ocr_db;"
- или используйте pgAdmin/GUI.

## Миграции (Alembic)
1. Убедитесь, что в alembic.ini настроен правильный SQLALCHEMY URL или используйте переменные окружения.
2. Запустите миграции:
   alembic upgrade head

Миграция создаёт таблицу `documents` и необходимые расширения (pg_trgm, unaccent).

## Запуск приложения
Запустить сервер разработки:
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

Перейдите в браузере: http://127.0.0.1:8000

## Загрузка и поиск
- На главной странице — форма загрузки файлов (PDF, DOCX, XLSX, JPG, PNG и т.д.).
- Файлы обрабатываются в фоне (BackgroundTasks), распознаётся текст и сохраняется в БД.
- Поиск использует PostgreSQL full-text (tsvector) + pg_trgm.

## Тесты
Запуск тестов:
pytest -q

Примечание: тесты, использующие Tesseract, будут пропущены, если бинарь Tesseract не доступен в PATH.

## Проблемы и отладка
- Если OCR не даёт результатов, убедитесь что:
  - Tesseract установлен и доступен;
  - Poppler в PATH;
  - установлены и совместимы библиотеки pillow/pytesseract/pdf2image.
- Логи приложения смотрите в консоли (uvicorn).

## Контакты
Используйте README как чеклист при разворачивании на Windows. Для продакшна ограничьте CORS и настройте безопасные переменные окружения.
